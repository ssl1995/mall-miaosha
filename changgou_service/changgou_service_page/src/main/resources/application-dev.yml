server:
  port: 9012
spring:
  application:
    name: page
  kafka:
    bootstrap-servers: 192.168.200.128:9092
    consumer:
      group-id: ${spring.application.name}-kafka-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    properties:
      session:
        timeout:
          # kafka会有一个心跳线程来同步服务端，告诉服务端自己是正常可用的
          # 默认是3秒发送一次心跳，超过session.timeout.ms（默认10秒）服务端没有收到心跳就会认为当前消费者失效。会导致重复消费，避免重复消费就修改默认值。
          ms: 600000 #单位毫秒
      max:
        poll:
          interval:
            # max.poll.interval.ms决定了获取消息后提交偏移量的最大时间，
            # 超过设定的时间（默认5分钟），服务端也会认为该消费者失效。会导致重复消费，避免重复消费就修改默认值。
            ms: 600000 #单位毫秒
  main:
    allow-bean-definition-overriding: true #当遇到同样名字的时候，是否允许覆盖注册
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:6868/eureka
  instance:
    prefer-ip-address: true
feign:
  hystrix:
    enabled: false
  client:
    config:
      default:   #配置全局的feign的调用超时时间  如果 有指定的服务配置 默认的配置不会生效
        connectTimeout: 600000 # 指定的是 消费者 连接服务提供者的连接超时时间 是否能连接  单位是毫秒
        readTimeout: 600000  # 指定的是调用服务提供者的 服务 的超时时间（）  单位是毫秒
#hystrix 配置
hystrix:
  command:
    default:
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制
          enabled: true
        isolation:
          strategy: SEMAPHORE
# 生成静态页的位置
pagepath: D:\ws_mall\changgou_parent_362\changgou_service\changgou_service_page\src\main\resources\templates\detail